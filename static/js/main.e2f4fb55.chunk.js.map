{"version":3,"sources":["components/user/UserSlice.js","components/user/Login.js","helpers/PrivateRoute.js","components/guest/EmployeeSlice.js","elements/Navigation.js","components/guest/GuestSlice.js","components/guest/Guests.js","components/guest/GuestForm.js","components/guest/GuestLogout.js","App.js","app/store.js","index.js"],"names":["loginUser","createAsyncThunk","thunkAPI","email","password","formData","FormData","append","fetch","method","body","response","json","data","status","localStorage","setItem","access_token","rejectWithValue","fetchUserBytoken","headers","Accept","Authorization","getItem","destroyUser","removeItem","userSlice","createSlice","name","initialState","first_name","guestList","isFetching","isSuccess","isError","errorMessage","reducers","clearState","state","extraReducers","fulfilled","payload","rejected","message","pending","actions","userSelector","user","Login","dispatch","useDispatch","history","useHistory","useForm","register","handleSubmit","errors","useSelector","useEffect","toast","error","push","className","Form","onSubmit","Group","controlId","Label","Control","type","autoComplete","pattern","required","Button","variant","PrivateRoute","Component","component","rest","render","props","to","pathname","from","location","getEmployeeLists","employeeListSlice","employees","employeeListSelector","Navigation","Navbar","bg","Container","Brand","style","cursor","onClick","Toggle","Collapse","Nav","exact","activeClassName","NavDropdown","title","id","Text","Link","guestListSlice","guests","addState","outState","toUpperCase","map","obj","visit_status","time_out","dayjs","format","loggedout","guestListSelector","Guest","Table","striped","bordered","hover","country","employee","time_in","length","GuestForm","reset","formState","useState","guestID","setGuestID","timer","setTimeout","clearTimeout","placeContent","Card","width","result","characters","charactersLength","i","charAt","Math","floor","random","makeid","Body","Title","placeholder","Select","value","GuestLogout","setMessage","Alert","App","path","configureStore","reducer","ReactDOM","StrictMode","store","document","getElementById"],"mappings":"yPAGaA,EAAYC,YACvB,cADuC,iDAEvC,aAA4BC,GAA5B,gGAASC,EAAT,EAASA,MAAOC,EAAhB,EAAgBA,UACVC,EAAW,IAAIC,UACVC,OAAO,QAASJ,GACzBE,EAASE,OAAO,WAAYH,GAH9B,kBAK2BI,MACrB,4DACA,CACEC,OAAQ,OACRC,KAAML,IATd,cAKUM,EALV,iBAaqBA,EAASC,OAb9B,WAaQC,EAbR,OAc4B,MAApBF,EAASG,OAdjB,wBAeMC,aAAaC,QAAQ,QAASH,EAAKA,KAAKI,cAf9C,kBAgBaJ,GAhBb,iCAkBaX,EAASgB,gBAAgBL,IAlBtC,0DAqBIX,EAASgB,gBAAgB,KAAEP,SAASE,MArBxC,0DAFuC,yDA4B5BM,EAAmBlB,YAC9B,yBAD8C,iDAE9C,aAAYC,GAAZ,2HAE2BM,MACrB,uDACA,CACEC,OAAQ,MACRW,QAAS,CACPC,OAAQ,mBACRC,cAAe,UAAYP,aAAaQ,QAAQ,SAChD,eAAgB,sBAT1B,cAEUZ,EAFV,gBAaqBA,EAASC,OAb9B,UAaQC,EAbR,OAc4B,MAApBF,EAASG,OAdjB,yDAekBD,EAAKA,OAfvB,iCAiBaX,EAASgB,gBAAgBL,IAjBtC,mFAoBWX,EAASgB,gBAAgB,KAAEP,SAASE,OApB/C,0DAF8C,yDA2BnCW,EAAcvB,YACzB,eADyC,iDAEzC,aAAYC,GAAZ,iGACEa,aAAaU,WAAW,SAD1B,kBAES,CAAC,GAFV,2CAFyC,yDAQ9BC,EAAYC,YAAY,CACnCC,KAAM,OACNC,aAAc,CACZC,WAAY,GACZ3B,MAAO,GACP4B,UAAW,GACXC,YAAY,EACZC,WAAW,EACXC,SAAS,EACTC,aAAc,IAEhBC,SAAU,CACRC,WAAY,SAACC,GAKX,OAJAA,EAAMJ,SAAU,EAChBI,EAAML,WAAY,EAClBK,EAAMN,YAAa,EAEZM,CACR,GAEHC,eAAa,mBACVf,EAAYgB,WAAY,SAACF,EAAD,GAAwB,EAAdG,QAKjC,OAJAH,EAAMnC,MAAQ,GACdmC,EAAMR,WAAa,GACnBQ,EAAMN,YAAa,EACnBM,EAAML,WAAY,EACXK,CACR,IAPU,cAQVtC,EAAUwC,WAAY,SAACF,EAAD,GAAyB,IAAfG,EAAc,EAAdA,QAK/B,OAJAH,EAAMnC,MAAQsC,EAAQtC,MACtBmC,EAAMR,WAAaW,EAAQX,WAC3BQ,EAAMN,YAAa,EACnBM,EAAML,WAAY,EACXK,CACR,IAdU,cAeVtC,EAAU0C,UAAW,SAACJ,EAAD,GAAyB,IAAfG,EAAc,EAAdA,QAC9BH,EAAMN,YAAa,EACnBM,EAAMJ,SAAU,EAChBI,EAAMH,aAAeM,EAAQE,OAC9B,IAnBU,cAoBV3C,EAAU4C,SAAU,SAACN,GACpBA,EAAMN,YAAa,CACpB,IAtBU,cAuBVb,EAAiByB,SAAU,SAACN,GAC3BA,EAAMN,YAAa,CACpB,IAzBU,cA0BVb,EAAiBqB,WAAY,SAACF,EAAD,GAAyB,IAAfG,EAAc,EAAdA,QACtCH,EAAMN,YAAa,EACnBM,EAAML,WAAY,EAElBK,EAAMnC,MAAQsC,EAAQtC,MACtBmC,EAAMR,WAAaW,EAAQX,UAC5B,IAhCU,cAiCVX,EAAiBuB,UAAW,SAACJ,GAC5BA,EAAMN,YAAa,EACnBM,EAAMJ,SAAU,CACjB,IApCU,KAwCAG,EAAeX,EAAUmB,QAAzBR,WAEFS,EAAe,SAACR,GAAD,OAAWA,EAAMS,IAAjB,E,gCCjDbC,EAtED,SAAC,GAAS,eACpB,IAAMC,EAAWC,cACXC,EAAUC,cAChB,EAA2CC,cAAnCC,EAAR,EAAQA,SAAkBC,GAA1B,EAAkBC,OAAlB,EAA0BD,cAC1B,EAAyDE,YACrDX,GADgBb,GAApB,EAAQD,WAAR,EAAoBC,WAAWC,EAA/B,EAA+BA,QAASC,EAAxC,EAAwCA,aAyBxC,OAlBAuB,qBAAU,WACN,OAAO,WACHT,EAASZ,IACZ,CACJ,GAAE,IAEHqB,qBAAU,WACFxB,IACAyB,IAAMC,MAAMzB,GACZc,EAASZ,MAGTJ,IACAgB,EAASZ,KACTc,EAAQU,KAAK,KAEpB,GAAE,CAAC3B,EAASD,IAGT,mCACI,qBAAK6B,UAAU,0DAAf,SACI,gCACI,8BACI,2DAIJ,eAACC,EAAA,EAAD,CAAMC,SAAUT,GA/Bf,SAAC1C,GACdoC,EAASjD,EAAUa,GACtB,IA6BuDJ,OAAO,OAA/C,UACI,eAACsD,EAAA,EAAKE,MAAN,CAAYH,UAAU,OAAOI,UAAU,YAAvC,UACI,cAACH,EAAA,EAAKI,MAAN,oBACA,cAACJ,EAAA,EAAKK,QAAN,yBACIC,KAAK,QACLC,aAAa,SACThB,EAAS,QAAS,CAClBiB,QAAS,wCAJjB,IAMIC,UAAQ,QAIhB,eAACT,EAAA,EAAKE,MAAN,CAAYH,UAAU,OAAOI,UAAU,eAAvC,UACI,cAACH,EAAA,EAAKI,MAAN,uBACA,cAACJ,EAAA,EAAKK,QAAN,yBACIC,KAAK,YACDf,EAAS,WAAY,CAAEkB,UAAU,KAFzC,IAGIF,aAAa,mBACbE,UAAQ,QAGhB,cAACC,EAAA,EAAD,CAAQC,QAAQ,UAAUL,KAAK,SAA/B,6BAQvB,E,uBC1EYM,EAAe,SAAC,GAAD,IAAcC,EAAd,EAAGC,UAAyBC,EAA5B,wBAC1B,cAAC,IAAD,2BACMA,GADN,IAEEC,OAAQ,SAACC,GAAD,OACNjE,aAAaQ,QAAQ,SACnB,cAACqD,EAAD,eAAeI,IAEf,cAAC,IAAD,CACEC,GAAI,CAAEC,SAAU,SAAU5C,MAAO,CAAE6C,KAAMH,EAAMI,YAL7C,IAHgB,E,oCCDfC,EAAmBpF,YAC5B,yBAD4C,iDAE5C,aAAYC,GAAZ,2HAE+BM,MACnB,oDACA,CACIC,OAAQ,MACRW,QAAS,CACLC,OAAQ,mBACRC,cAAe,UAAYP,aAAaQ,QAAQ,SAChD,eAAgB,sBATpC,cAEcZ,EAFd,gBAayBA,EAASC,OAblC,UAaYC,EAbZ,OAegC,MAApBF,EAASG,OAfrB,yDAgBwBD,IAhBxB,iCAkBmBX,EAASgB,gBAAgBL,IAlB5C,mFAqBeX,EAASgB,gBAAgB,KAAEP,SAASE,OArBnD,0DAF4C,yDA4BnCyE,EAAoB3D,YAAY,CACzCC,KAAM,eACNC,aAAc,CACV0D,UAAU,IAEdnD,SAAU,CACNC,WAAY,SAACC,GACT,OAAOA,CACV,GAELC,eAAa,mBACR8C,EAAiBzC,SAAU,SAACN,GAC5B,IAFQ,cAGR+C,EAAiB7C,WAAY,SAACF,EAAD,GAAyB,IAAfG,EAAc,EAAdA,QACpCH,EAAMiD,UAAY9C,EAAQ5B,IAC7B,IALQ,cAMRwE,EAAiB3C,UAAW,SAACJ,GAC7B,IAPQ,KAaJkD,GAFiBF,EAAkBzC,QAAjCR,WAEqB,SAACC,GAAD,OAAWA,EAAMiD,SAAjB,GC9CvBE,EAAa,WACtB,IAAMtC,EAAUC,cACVH,EAAWC,cACjB,EAAgCO,YAAYX,GAApChB,EAAR,EAAQA,WAAYI,EAApB,EAAoBA,QAEpBwB,qBAAU,WAC4B,WAA9BP,EAAQiC,SAASF,UAA4BpD,IAC7CmB,EAAS9B,EAAiB,CAAC,IAC3B8B,EAASoC,EAAiB,CAAC,IAElC,GAAE,CAAClC,EAAQiC,WAEZ1B,qBAAU,WACFxB,IACAe,EAASZ,KACTc,EAAQU,KAAK,UAEpB,GAAE,CAAC3B,IAOJ,OACI,qCACOJ,GACC,cAAC4D,EAAA,EAAD,CAAQhB,QAAQ,OAAOiB,GAAG,OAA1B,SACI,eAACC,EAAA,EAAD,WACI,cAACF,EAAA,EAAOG,MAAR,CAAcC,MAAO,CAAEC,OAAQ,WAAaC,QAAS,kBAAM7C,EAAQU,KAAK,IAAnB,EAArD,0BACA,cAAC6B,EAAA,EAAOO,OAAR,IACA,eAACP,EAAA,EAAOQ,SAAR,CAAiBpC,UAAU,sBAA3B,UACI,eAACqC,EAAA,EAAD,CAAKrC,UAAU,UAAf,UACI,cAAC,IAAD,CAASmB,GAAG,IAAImB,OAAO,EAAMC,gBAAgB,SAASvC,UAAU,WAAhE,kBACA,eAACwC,EAAA,EAAD,CAAaC,MAAM,QAAQC,GAAG,qBAA9B,UACI,cAAC,IAAD,CAASvB,GAAG,YAAYoB,gBAAgB,SAASvC,UAAU,gBAA3D,sBACA,cAAC,IAAD,CAASmB,GAAG,aAAaoB,gBAAgB,SAASvC,UAAU,gBAA5D,6BAGR,eAACqC,EAAA,EAAD,CAAKrC,UAAU,UAAf,UACI,eAAC4B,EAAA,EAAOe,KAAR,4BACkB,iCAAS3E,OAE3B,cAACqE,EAAA,EAAIO,KAAL,CAAUV,QAxBrB,WACb/C,EAASzB,EAAY,CAAC,IACtB2B,EAAQU,KAAK,SAChB,EAqBwDC,UAAU,cAAvC,iCAQ/B,E,kCCvDY6C,EAAiBhF,YAAY,CACtCC,KAAM,YACNC,aAAc,CACV+E,OAAQ,IAEZxE,SAAU,CACNyE,SAAU,SAACvE,EAAD,GAAyB,IAAfG,EAAc,EAAdA,QAChBH,EAAMsE,OAAN,sBAAmBtE,EAAMsE,QAAzB,CAAiCnE,GACpC,EACDqE,SAAU,SAACxE,EAAD,GAAyB,IAE3BkE,EAF0B,EAAd/D,QAECsE,cAEjBzE,EAAMsE,OAAStE,EAAMsE,OAAOI,KAAI,SAAAC,GAC5B,OAAIA,EAAIT,KAAOA,EACJ,2BACAS,GADP,IAEIC,aAAc,MACdC,SAAUC,MAAQC,OAAO,wBAGtBJ,CACd,IAED3E,EAAMgF,WAAY,CACrB,KAIF,EAA+BX,EAAe9D,QAAtCgE,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,SAEZS,EAAoB,SAACjF,GAAD,OAAWA,EAAMsE,MAAjB,EC5BpBY,EAAQ,WAEjB,IAAQZ,EAAWnD,YAAY8D,GAAvBX,OAER,OACI,eAAChB,EAAA,EAAD,CAAW9B,UAAU,OAArB,UACI,eAAC2D,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAA7B,UACI,gCACI,+BACI,oCACA,sCACA,yCACA,0CACA,yCACA,0CACA,6CAGR,uCACKhB,QADL,IACKA,OADL,EACKA,EAAQI,KAAI,SAAAC,GACT,OACI,+BACI,6BAAKA,EAAIT,KACT,6BAAKS,EAAIrF,OACT,6BAAKqF,EAAIY,UACT,6BAAKZ,EAAIa,WACT,6BAAKb,EAAIc,UACT,6BAAKd,EAAIE,WACT,6BAAKF,EAAIC,iBAPJD,EAAIT,GAUpB,UAILI,MAAaA,GAAUA,EAAOoB,SAAW,GAAK,sBAAMlE,UAAU,aAAhB,mCAI7D,E,gBCpCYmE,EAAY,WACrB,IAAMhF,EAAWC,cACTqC,EAAc9B,YAAY+B,GAA1BD,UACR,EAAiElC,cAAzDC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,aAAc2E,EAAhC,EAAgCA,MAAoB1E,EAApD,EAAuC2E,UAAa3E,OACpD,EAA8B4E,qBAA9B,mBAAOC,EAAP,KAAgBC,EAAhB,KAEgBlF,cA6BhB,OALAM,qBAAU,WACN,IAAM6E,EAAQC,YAAW,kBAAMF,GAAN,GAAoB,KAC7C,OAAO,kBAAMG,aAAaF,EAAnB,CACV,GAAE,CAACF,IAGA,cAACzC,EAAA,EAAD,CAAW9B,UAAU,oDAAoDgC,MAAO,CAAE4C,aAAc,UAAhG,SACI,cAACC,EAAA,EAAD,CAAM7C,MAAO,CAAE8C,MAAO,SAAtB,SACI,cAAC7E,EAAA,EAAD,CAAMC,SAAUT,GAnBX,SAAClD,GACd,IAAIQ,EAAOR,EACXQ,EAAK2F,GAbM,WAIX,IAHA,IAAIqC,EAAS,GACTC,EAAa,iEACbC,EAAmBD,EAAWd,OACzBgB,EAAI,EAAGA,EAAI,EAAGA,IACnBH,GAAUC,EAAWG,OAAOC,KAAKC,MAAMD,KAAKE,SACxCL,IAER,OAAOF,EAAO9B,aACjB,CAIasC,GACVf,EAAWzH,EAAK2F,IAChB3F,EAAKqG,aAAe,KACpBrG,EAAKkH,QAAUX,MAAQC,OAAO,sBAC9BxG,EAAKsG,SAAW,GAChBlE,EAAS4D,EAAShG,IAClBqH,GACH,IAUW,SACI,eAACS,EAAA,EAAKW,KAAN,WACI,cAACX,EAAA,EAAKY,MAAN,4BAEA,sBAAKzF,UAAauE,EAAU,UAAY,SAAxC,UACI,oBAAIvE,UAAU,YAAd,4BACA,6BAAKuE,IACL,0DAGJ,sBAAKvE,UAAauE,EAAU,SAAW,UAAvC,UAEI,eAACtE,EAAA,EAAKE,MAAN,CAAYH,UAAU,OAAtB,UACI,cAACC,EAAA,EAAKI,MAAN,mBADJ,MACoC,OAACX,QAAD,IAACA,MAAQ5B,OAAQ,sBAAMkC,UAAU,cAAhB,wBACjD,cAACC,EAAA,EAAKK,QAAN,aAAcC,KAAK,OAAOmF,YAAY,aAAgBlG,EAAS,OAAQ,CAAEkB,UAAU,SAGvF,eAACT,EAAA,EAAKE,MAAN,CAAYH,UAAU,OAAtB,UACI,cAACC,EAAA,EAAKI,MAAN,sBADJ,MACuC,OAACX,QAAD,IAACA,MAAQqE,UAAW,sBAAM/D,UAAU,cAAhB,wBACvD,cAACC,EAAA,EAAKK,QAAN,aAAcC,KAAK,OAAOmF,YAAY,WAAclG,EAAS,UAAW,CAAEkB,UAAU,SAGxF,eAACT,EAAA,EAAKE,MAAN,CAAYH,UAAU,OAAtB,UACI,cAACC,EAAA,EAAKI,MAAN,gCADJ,OACkD,OAACX,QAAD,IAACA,MAAQsE,WAAY,sBAAMhE,UAAU,cAAhB,wBACnE,eAACC,EAAA,EAAK0F,OAAN,yBAAa,aAAW,4BAA+BnG,EAAS,WAAY,CAAEkB,UAAU,KAAxF,cACI,wBAAQkF,MAAM,GAAd,sCADJ,OAEKnE,QAFL,IAEKA,OAFL,EAEKA,EAAWyB,KAAI,SAAAC,GACZ,OACI,wBAAqByC,MAAQ,OAACzC,QAAD,IAACA,KAAKnF,WAAamF,EAAInF,WAAamF,EAAI9G,MAArE,SAA8E,OAAC8G,QAAD,IAACA,KAAKnF,WAAamF,EAAInF,WAAamF,EAAI9G,OAAzG8G,EAAIT,GAExB,cAMV6B,EACC,cAAC5D,EAAA,EAAD,CAAQC,QAAQ,UAAUL,KAAK,SAAS2B,QAAS,kBAAMsC,GAAN,EAAjD,mBAEA,cAAC7D,EAAA,EAAD,CAAQC,QAAQ,UAAUL,KAAK,SAA/B,4BAO3B,E,UCtFYsF,GAAc,WACvB,IAAM1G,EAAWC,cACjB,EAAiEG,cAAzDC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,aAAc2E,EAAhC,EAAgCA,MAAoB1E,EAApD,EAAuC2E,UAAa3E,OAEpD,EAA8B4E,qBAA9B,mBAAOzF,EAAP,KAAgBiH,EAAhB,KAEAlG,qBAAU,WACN,IAAM6E,EAAQC,YAAW,kBAAMoB,GAAN,GAAoB,KAC7C,OAAO,kBAAMnB,aAAaF,EAAnB,CACV,GAAE,CAAC5F,IASJ,OACI,cAACiD,EAAA,EAAD,CAAW9B,UAAU,oDAAoDgC,MAAO,CAAE4C,aAAc,UAAhG,SACI,cAACC,EAAA,EAAD,CAAM7C,MAAO,CAAE8C,MAAO,SAAtB,SACI,eAAC7E,EAAA,EAAD,CAAMC,SAAUT,GAVX,SAAClD,GACduJ,GAAW,GACX3G,EAAS6D,EAASzG,EAASmG,KAC3BoD,GAAW,GACX1B,GACH,IAKW,YAEOvF,GACC,cAACkH,GAAA,EAAD,CAAOnF,QAAQ,UAAf,+BAIJ,eAACiE,EAAA,EAAKW,KAAN,WACI,cAACX,EAAA,EAAKY,MAAN,2BACA,eAACxF,EAAA,EAAKE,MAAN,CAAYH,UAAU,OAAtB,UACI,cAACC,EAAA,EAAKI,MAAN,uBADJ,MACwC,OAACX,QAAD,IAACA,MAAQgD,KAAM,sBAAM1C,UAAU,cAAhB,wBACnD,cAACC,EAAA,EAAKK,QAAN,aAAcC,KAAK,OAAOmF,YAAY,YAAelG,EAAS,KAAM,CAAEkB,UAAU,SAGpF,cAACC,EAAA,EAAD,CAAQC,QAAQ,UAAUL,KAAK,SAA/B,6BAOvB,ECtBcyF,OAlBf,WAEE,OACE,qBAAKhG,UAAU,MAAf,SACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOsC,OAAK,EAACvB,UAAW7B,EAAO+G,KAAK,WACpC,cAAC,EAAD,CAAc3D,OAAK,EAACvB,UAAW2C,EAAOuC,KAAK,MAC3C,cAAC,EAAD,CAAc3D,OAAK,EAACvB,UAAWoD,EAAW8B,KAAK,cAC/C,cAAC,EAAD,CAAc3D,OAAK,EAACvB,UAAW8E,GAAaI,KAAK,eACjD,cAAC,IAAD,CAAU9E,GAAG,aAKtB,ECrBc+E,eAAe,CAC5BC,QAAS,CACPlH,KAAMrB,EAAUuI,QAChB1E,UAAWD,EAAkB2E,QAC7BrD,OAAQD,EAAesD,WCA3BC,IAASnF,OACP,cAAC,IAAMoF,WAAP,UACE,eAAC,IAAD,CAAUC,MAAOA,GAAjB,UACE,cAAC,GAAD,IACA,cAAC,IAAD,SAGJC,SAASC,eAAe,Q","file":"static/js/main.e2f4fb55.chunk.js","sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\n\n\nexport const loginUser = createAsyncThunk(\n  'users/login',\n  async ({ email, password }, thunkAPI) => {\n    let formData = new FormData();\n    formData.append('email', email)\n    formData.append('password', password)\n    try {\n      const response = await fetch(\n        'https://api-dev.momenttrack.com/auth/default/system/login',\n        {\n          method: 'POST',\n          body: formData,\n        }\n      );\n\n      let data = await response.json();\n      if (response.status === 200) {\n        localStorage.setItem('token', data.data.access_token);\n        return data;\n      } else {\n        return thunkAPI.rejectWithValue(data);\n      }\n    } catch (e) {\n      thunkAPI.rejectWithValue(e.response.data);\n    }\n  }\n);\n\nexport const fetchUserBytoken = createAsyncThunk(\n  'users/fetchUserByToken',\n  async ({ }, thunkAPI) => {\n    try {\n      const response = await fetch(\n        'https://api-dev.momenttrack.com/api/lexcorp/users/me',\n        {\n          method: 'GET',\n          headers: {\n            Accept: 'application/json',\n            Authorization: 'Bearer ' + localStorage.getItem('token'),\n            'Content-Type': 'application/json',\n          },\n        }\n      );\n      let data = await response.json();\n      if (response.status === 200) {\n        return { ...data.data };\n      } else {\n        return thunkAPI.rejectWithValue(data);\n      }\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e.response.data);\n    }\n  }\n);\n\nexport const destroyUser = createAsyncThunk(\n  'users/logout',\n  async ({ }, thunkAPI) => {\n    localStorage.removeItem('token');\n    return {}\n  }\n);\n\nexport const userSlice = createSlice({\n  name: 'user',\n  initialState: {\n    first_name: '',\n    email: '',\n    guestList: '',\n    isFetching: false,\n    isSuccess: false,\n    isError: false,\n    errorMessage: '',\n  },\n  reducers: {\n    clearState: (state) => {\n      state.isError = false;\n      state.isSuccess = false;\n      state.isFetching = false;\n\n      return state;\n    },\n  },\n  extraReducers: {\n    [destroyUser.fulfilled]: (state, { payload }) => {\n      state.email = \"\";\n      state.first_name = \"\";\n      state.isFetching = false;\n      state.isSuccess = false;\n      return state;\n    },\n    [loginUser.fulfilled]: (state, { payload }) => {\n      state.email = payload.email;\n      state.first_name = payload.first_name;\n      state.isFetching = false;\n      state.isSuccess = true;\n      return state;\n    },\n    [loginUser.rejected]: (state, { payload }) => {\n      state.isFetching = false;\n      state.isError = true;\n      state.errorMessage = payload.message;\n    },\n    [loginUser.pending]: (state) => {\n      state.isFetching = true;\n    },\n    [fetchUserBytoken.pending]: (state) => {\n      state.isFetching = true;\n    },\n    [fetchUserBytoken.fulfilled]: (state, { payload }) => {\n      state.isFetching = false;\n      state.isSuccess = true;\n\n      state.email = payload.email;\n      state.first_name = payload.first_name;\n    },\n    [fetchUserBytoken.rejected]: (state) => {\n      state.isFetching = false;\n      state.isError = true;\n    },\n  },\n});\n\nexport const { clearState } = userSlice.actions;\n\nexport const userSelector = (state) => state.user;\n","import React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useForm } from 'react-hook-form';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { loginUser, userSelector, clearState } from './UserSlice';\nimport toast from 'react-hot-toast';\nimport { useHistory } from 'react-router-dom';\nimport { Button, Form } from 'react-bootstrap';\n\nconst Login = ({ }) => {\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const { register, errors, handleSubmit } = useForm();\n    const { isFetching, isSuccess, isError, errorMessage } = useSelector(\n        userSelector\n    );\n    const onSubmit = (data) => {\n        dispatch(loginUser(data));\n    };\n\n    useEffect(() => {\n        return () => {\n            dispatch(clearState());\n        };\n    }, []);\n\n    useEffect(() => {\n        if (isError) {\n            toast.error(errorMessage);\n            dispatch(clearState());\n        }\n\n        if (isSuccess) {\n            dispatch(clearState());\n            history.push('/');\n        }\n    }, [isError, isSuccess]);\n\n    return (\n        <>\n            <div className=\"d-flex justify-content-center align-items-center vh-100\">\n                <div>\n                    <div>\n                        <h2>\n                            Sign in to your account\n                        </h2>\n                    </div>\n                    <Form onSubmit={handleSubmit(onSubmit)} method=\"POST\">\n                        <Form.Group className=\"mb-3\" controlId=\"formEmail\">\n                            <Form.Label>Email</Form.Label>\n                            <Form.Control\n                                type=\"email\"\n                                autoComplete=\"email\"\n                                {...register(\"email\", {\n                                    pattern: /^[a-zA-Z0-9+_.-]+@[a-zA-Z0-9.-]+$/i,\n                                })}\n                                required\n                            />\n                        </Form.Group>\n\n                        <Form.Group className=\"mb-3\" controlId=\"formPassword\">\n                            <Form.Label>Password</Form.Label>\n                            <Form.Control\n                                type=\"password\"\n                                {...register(\"password\", { required: true })}\n                                autoComplete=\"current-password\"\n                                required\n                            />\n                        </Form.Group>\n                        <Button variant=\"primary\" type=\"submit\">\n                            Submit\n                        </Button>\n                    </Form>\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default Login;\n","import React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\n\nexport const PrivateRoute = ({ component: Component, ...rest }) => (\n  <Route\n    {...rest}\n    render={(props) =>\n      localStorage.getItem('token') ? (\n        <Component {...props} />\n      ) : (\n        <Redirect\n          to={{ pathname: '/login', state: { from: props.location } }}\n        />\n      )\n    }\n  />\n);\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\n\r\nexport const getEmployeeLists = createAsyncThunk(\r\n    'employeeLists/employee',\r\n    async ({ }, thunkAPI) => {\r\n        try {\r\n            const response = await fetch(\r\n                'https://api-dev.momenttrack.com/api/lexcorp/users',\r\n                {\r\n                    method: 'GET',\r\n                    headers: {\r\n                        Accept: 'application/json',\r\n                        Authorization: 'Bearer ' + localStorage.getItem('token'),\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                }\r\n            );\r\n            let data = await response.json();\r\n\r\n            if (response.status === 200) {\r\n                return { ...data };\r\n            } else {\r\n                return thunkAPI.rejectWithValue(data);\r\n            }\r\n        } catch (e) {\r\n            return thunkAPI.rejectWithValue(e.response.data);\r\n        }\r\n    }\r\n);\r\n\r\nexport const employeeListSlice = createSlice({\r\n    name: 'employeeList',\r\n    initialState: {\r\n        employees:[]\r\n    },\r\n    reducers: {\r\n        clearState: (state) => {\r\n            return state;\r\n        },\r\n    },\r\n    extraReducers: {\r\n        [getEmployeeLists.pending]: (state) => {\r\n        },\r\n        [getEmployeeLists.fulfilled]: (state, { payload }) => {\r\n            state.employees = payload.data;\r\n        },\r\n        [getEmployeeLists.rejected]: (state) => {\r\n        },\r\n    },\r\n});\r\n\r\nexport const { clearState } = employeeListSlice.actions;\r\n\r\nexport const employeeListSelector = (state) => state.employees;\r\n","import React, { useEffect } from 'react'\r\nimport { Container, Nav, Navbar, NavDropdown } from 'react-bootstrap'\r\nimport { userSelector, fetchUserBytoken, clearState, destroyUser } from '../components/user/UserSlice';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { NavLink, useHistory } from 'react-router-dom';\r\nimport { getEmployeeLists } from '../components/guest/EmployeeSlice';\r\n\r\nexport const Navigation = () => {\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const { first_name, isError } = useSelector(userSelector);\r\n\r\n    useEffect(() => {\r\n        if (history.location.pathname !== '/login' && !!!first_name){\r\n            dispatch(fetchUserBytoken({}));\r\n            dispatch(getEmployeeLists({}));\r\n        }\r\n    }, [history.location]);\r\n\r\n    useEffect(() => {\r\n        if (isError) {\r\n            dispatch(clearState());\r\n            history.push('/login');\r\n        }\r\n    }, [isError]);\r\n\r\n    const onLogOut = () => {\r\n        dispatch(destroyUser({}));\r\n        history.push('/login');\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {!!first_name &&\r\n                <Navbar variant='dark' bg=\"dark\">\r\n                    <Container>\r\n                        <Navbar.Brand style={{ cursor: 'pointer' }} onClick={() => history.push('/')}>Guest Report</Navbar.Brand>\r\n                        <Navbar.Toggle />\r\n                        <Navbar.Collapse className=\"justify-content-end\">\r\n                            <Nav className=\"me-auto\">\r\n                                <NavLink to=\"/\" exact={true} activeClassName=\"active\" className=\"nav-link\">Home</NavLink>\r\n                                <NavDropdown title=\"Guest\" id=\"basic-nav-dropdown\">\r\n                                    <NavLink to=\"/guest-in\" activeClassName=\"active\" className=\"dropdown-item\">Check In</NavLink>\r\n                                    <NavLink to=\"/guest-out\" activeClassName=\"active\" className=\"dropdown-item\">Check Out</NavLink>\r\n                                </NavDropdown>\r\n                            </Nav>\r\n                            <Nav className=\"ms-auto\">\r\n                                <Navbar.Text>\r\n                                    Signed in as: <strong>{first_name}</strong>\r\n                                </Navbar.Text>\r\n                                <Nav.Link onClick={onLogOut} className=\"text-danger\"> Logout</Nav.Link>\r\n                            </Nav>\r\n                        </Navbar.Collapse>\r\n                    </Container>\r\n                </Navbar>\r\n            }\r\n        </>\r\n    )\r\n}","import { createSlice } from '@reduxjs/toolkit';\r\nimport dayjs from 'dayjs';\r\n\r\nexport const guestListSlice = createSlice({\r\n    name: 'guestList',\r\n    initialState: {\r\n        guests: [],\r\n    },\r\n    reducers: {\r\n        addState: (state, { payload }) => {\r\n            state.guests = [...state.guests, payload];\r\n        },\r\n        outState: (state, { payload }) => {\r\n\r\n            let id = payload.toUpperCase()\r\n\r\n            state.guests = state.guests.map(obj => {\r\n                if (obj.id === id)\r\n                    return {\r\n                        ...obj,\r\n                        visit_status: 'out',\r\n                        time_out: dayjs().format('MM/DD/YYYY hh:mm A')\r\n                    }\r\n                else\r\n                    return obj\r\n            });\r\n\r\n            state.loggedout = true\r\n        },\r\n    },\r\n});\r\n\r\nexport const { addState, outState } = guestListSlice.actions;\r\n\r\nexport const guestListSelector = (state) => state.guests;\r\n","import React from 'react'\r\nimport { Container, Table } from 'react-bootstrap'\r\n\r\nimport { useSelector } from 'react-redux';\r\nimport { guestListSelector } from '../guest/GuestSlice';\r\n\r\nexport const Guest = () => {\r\n\r\n    const { guests } = useSelector(guestListSelector);\r\n\r\n    return (\r\n        <Container className='mt-5'>\r\n            <Table striped bordered hover>\r\n                <thead>\r\n                    <tr>\r\n                        <th>ID</th>\r\n                        <th>Name</th>\r\n                        <th>Country</th>\r\n                        <th>Employee</th>\r\n                        <th>Date In</th>\r\n                        <th>Date Out</th>\r\n                        <th>Status</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {guests?.map(obj => {\r\n                        return (\r\n                            <tr key={obj.id}>\r\n                                <td>{obj.id}</td>\r\n                                <td>{obj.name}</td>\r\n                                <td>{obj.country}</td>\r\n                                <td>{obj.employee}</td>\r\n                                <td>{obj.time_in}</td>\r\n                                <td>{obj.time_out}</td>\r\n                                <td>{obj.visit_status}</td>\r\n                            </tr>\r\n                        )\r\n                    })}\r\n                </tbody>\r\n            </Table>\r\n\r\n            {!!!guests || (!!guests && guests.length) <= 0 && <span className='text-muted'>* no guests to show</span>}\r\n        </Container>\r\n    )\r\n\r\n}","import dayjs from 'dayjs';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Button, Card, Container, Form } from 'react-bootstrap';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { employeeListSelector, getEmployeeLists } from './EmployeeSlice';\r\nimport { addState } from './GuestSlice';\r\n\r\nexport const GuestForm = () => {\r\n    const dispatch = useDispatch();\r\n    const { employees } = useSelector(employeeListSelector);\r\n    const { register, handleSubmit, reset, formState: { errors } } = useForm();\r\n    const [guestID, setGuestID] = useState()\r\n\r\n    const history = useHistory()\r\n\r\n    const makeid = () => {\r\n        var result = '';\r\n        var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n        var charactersLength = characters.length;\r\n        for (var i = 0; i < 6; i++) {\r\n            result += characters.charAt(Math.floor(Math.random() *\r\n                charactersLength));\r\n        }\r\n        return result.toUpperCase();\r\n    }\r\n\r\n    const onSubmit = (formData) => {\r\n        let data = formData;\r\n        data.id = makeid()\r\n        setGuestID(data.id)\r\n        data.visit_status = 'in'\r\n        data.time_in = dayjs().format('MM/DD/YYYY hh:mm A')\r\n        data.time_out = \"\"\r\n        dispatch(addState(data))\r\n        reset()\r\n    }\r\n\r\n    useEffect(() => {\r\n        const timer = setTimeout(() => setGuestID(), 20000);\r\n        return () => clearTimeout(timer);\r\n    }, [guestID]);\r\n\r\n    return (\r\n        <Container className='d-flex align-items-center align-center w-100 pt-5' style={{ placeContent: 'center' }}>\r\n            <Card style={{ width: '18rem' }}>\r\n                <Form onSubmit={handleSubmit(onSubmit)}>\r\n                    <Card.Body>\r\n                        <Card.Title>Guest Sign in</Card.Title>\r\n\r\n                        <div className={!!guestID ? 'd-block' : 'd-none'}>\r\n                            <h6 className='mt-3 mb-1'>Your Guest ID:</h6>\r\n                            <h1>{guestID}</h1>\r\n                            <p>*use this ID to logout</p>\r\n                        </div>\r\n\r\n                        <div className={!!guestID ? 'd-none' : 'd-block'}>\r\n\r\n                            <Form.Group className=\"mb-3\" >\r\n                                <Form.Label>Name</Form.Label> {!!errors?.name && <span className='text-danger'>* required</span>}\r\n                                <Form.Control type=\"text\" placeholder=\"Full Name\" {...register('name', { required: true })} />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group className=\"mb-3\" >\r\n                                <Form.Label>Country</Form.Label> {!!errors?.country && <span className='text-danger'>* required</span>}\r\n                                <Form.Control type=\"text\" placeholder=\"Country\" {...register(\"country\", { required: true })} />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group className=\"mb-3\" >\r\n                                <Form.Label>Visiting Employee</Form.Label>  {!!errors?.employee && <span className='text-danger'>* required</span>}\r\n                                <Form.Select aria-label=\"Select Employee to visit\" {...register(\"employee\", { required: true })}>\r\n                                    <option value=\"\">Select Employee to visit</option>\r\n                                    {employees?.map(obj => {\r\n                                        return (\r\n                                            <option key={obj.id} value={!!obj?.first_name ? obj.first_name : obj.email}>{!!obj?.first_name ? obj.first_name : obj.email}</option>\r\n                                        )\r\n                                    })}\r\n                                </Form.Select>\r\n                            </Form.Group>\r\n\r\n                        </div>\r\n\r\n                        {!!guestID ?\r\n                            <Button variant=\"warning\" type=\"button\" onClick={() => setGuestID()}>Clear</Button>\r\n                            :\r\n                            <Button variant=\"primary\" type=\"submit\">Submit</Button>\r\n                        }\r\n                    </Card.Body>\r\n                </Form>\r\n            </Card>\r\n        </Container>\r\n    );\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Alert, Button, Card, Container, Form } from 'react-bootstrap';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useDispatch } from 'react-redux';\r\nimport { getEmployeeLists } from './EmployeeSlice';\r\nimport { outState } from './GuestSlice';\r\n\r\nexport const GuestLogout = () => {\r\n    const dispatch = useDispatch();\r\n    const { register, handleSubmit, reset, formState: { errors } } = useForm();\r\n\r\n    const [message, setMessage] = useState()\r\n\r\n    useEffect(() => {\r\n        const timer = setTimeout(() => setMessage(), 10000);\r\n        return () => clearTimeout(timer);\r\n    }, [message]);\r\n\r\n    const onSubmit = (formData) => {\r\n        setMessage(false)\r\n        dispatch(outState(formData.id))\r\n        setMessage(true)\r\n        reset()\r\n    }\r\n\r\n    return (\r\n        <Container className='d-flex align-items-center align-center w-100 pt-5' style={{ placeContent: 'center' }}>\r\n            <Card style={{ width: '18rem' }}>\r\n                <Form onSubmit={handleSubmit(onSubmit)}>\r\n\r\n                    {!!message &&\r\n                        <Alert variant=\"success\">\r\n                            Guest Logged Out!\r\n                        </Alert>\r\n                    }\r\n                    <Card.Body>\r\n                        <Card.Title>Guest Logout</Card.Title>\r\n                        <Form.Group className=\"mb-3\" >\r\n                            <Form.Label>Guest ID</Form.Label> {!!errors?.id && <span className='text-danger'>* required</span>}\r\n                            <Form.Control type=\"text\" placeholder=\"guest ID\" {...register(\"id\", { required: true })} />\r\n                        </Form.Group>\r\n\r\n                        <Button variant=\"primary\" type=\"submit\">Logout</Button>\r\n                    </Card.Body>\r\n\r\n                </Form>\r\n            </Card>\r\n        </Container>\r\n    );\r\n};\r\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\nimport Login from './components/user/Login';\nimport { PrivateRoute } from './helpers/PrivateRoute';\nimport { Navigation } from './elements/Navigation';\nimport { Guest } from './components/guest/Guests';\nimport { GuestForm } from './components/guest/GuestForm';\nimport { GuestLogout } from './components/guest/GuestLogout';\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Navigation />\n        <Switch>\n          <Route exact component={Login} path=\"/login\" />\n          <PrivateRoute exact component={Guest} path=\"/\" />\n          <PrivateRoute exact component={GuestForm} path=\"/guest-in\" />\n          <PrivateRoute exact component={GuestLogout} path=\"/guest-out\" />\n          <Redirect to=\"/\" />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport { employeeListSlice } from '../components/guest/EmployeeSlice';\nimport { guestListSlice } from '../components/guest/GuestSlice';\nimport { userSlice } from '../components/user/UserSlice';\nexport default configureStore({\n  reducer: {\n    user: userSlice.reducer,\n    employees: employeeListSlice.reducer,\n    guests: guestListSlice.reducer,\n  },\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './app/store';\nimport { Provider } from 'react-redux';\nimport { Toaster } from 'react-hot-toast';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n      <Toaster />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}